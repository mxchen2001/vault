{"version":3,"sources":["Directory.js","Terminal.js","Test.js","App.js","index.js"],"names":["Node","name","type","parent","this","children","Directory","root_name","root","currentNode","path","node","map","child","filter","reduce","acc","curr","undefined","find","baseURL","fileName","existingFile","pwd","current","split","forEach","pathEl","getDirectories","getFiles","directory_name","push","start","entirePath","HELP_MESSAGE","HELP_STYLE","INFO_STYLE","RAW_PATH","Terminal","props","today","Date","time","getHours","getMinutes","getSeconds","useState","width","window","innerWidth","height","innerHeight","dimensions","setDimensions","message","consoleOut","setConsoleOut","previousText","setPreviousText","length","previousTextPtr","setPreviousTextPtr","currentDirectory","dir","currentLine","useRef","terminalBody","showHelp","setShowHelp","useEffect","handleResize","addEventListener","removeEventListener","handleEnter","event","key","tokens","value","autocompleteToken","getNode","currentPathEl","index","startsWith","previousTokens","slice","join","completedToken","completedString","stdoutQueue","className","getCurrentPath","command","toLowerCase","args","ls","childDir","childFiles","cd","mkdir","touch","options","url","getHref","replace","method","axios","then","res","console","log","JSON","stringify","data","lines","line","catch","err","open","clientHeight","scrollHeight","scrollTo","style","backgroundColor","ref","onClick","document","getElementById","focus","item","id","autoFocus","autoComplete","tabIndex","onFocus","parse","App","filesys","setFilesys","tree","master","subPath","existingDirectory","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8f25dc50.chunk.js","sourcesContent":["const DIRECTORY_TYPE = 0;\nconst FILE_TYPE = 1;\n\nclass Node {\n    constructor(name, type, parent) {\n        this.name = name;\n        this.type = type;\n        this.parent = parent;\n        this.children = [];\n    }\n}\n\n\nexport default class Directory {\n    constructor(root_name) {\n        this.root = new Node(root_name, DIRECTORY_TYPE, null);\n        this.currentNode = this.root;\n        this.path = this.root.name + '/';\n    }\n\n    setCurrent(node) {\n        this.currentNode = node;\n    }\n\n    getCurrentPath() {\n        return this.path;\n    }\n\n    getNode() {\n        return this.currentNode;\n    }\n\n    getChildren() {\n        return this.currentNode.children.map(child => child.name);\n    }\n\n    getFiles(node=this.currentNode) {\n        if (node) {\n            return node.children.filter(child => child.type === FILE_TYPE).map(child => child.name).reduce((acc, curr) => acc + ' ' + curr, '');\n        }\n        return null;\n    }\n\n    getDirectories(node=this.currentNode) {\n        if (node) {\n            return node.children.filter(child => child.type === DIRECTORY_TYPE).map(child => child.name).reduce((acc, curr) => acc + ' ' + curr, '');\n        }\n        return null;\n    }\n\n    existingDirectory(path) {\n        const node = this.currentNode.children.find(child => child.name === path && child.type === DIRECTORY_TYPE);\n        return node !== undefined;\n    }\n\n    existingFile(path) {\n        const node = this.currentNode.children.find(child => child.name === path && child.type === FILE_TYPE);\n        return node !== undefined;\n    }\n\n    getHref(baseURL, fileName) {\n        if (this.existingFile(fileName)) {\n            return baseURL + this.pwd() + '/' + fileName;\n        }\n        return null;\n    }\n\n    ls(path) {\n        let current = this.currentNode;\n        path.split('/').forEach((pathEl) => {\n            if (pathEl === \"..\") {\n                if (current.parent === null) {\n                    return;\n                }\n                current = current.parent;\n                return;\n            }\n\n            if (pathEl === \"~\") {\n                current = this.root;\n                return;\n            }\n    \n            const node = current.children.find(child => child.name === pathEl && child.type === DIRECTORY_TYPE);\n            if (node === undefined) {\n                return;\n            }\n            current = node;\n        });\n        return [this.getDirectories(current), this.getFiles(current)];\n    }\n\n    mkdir(directory_name) {\n        this.currentNode.children.push(new Node(directory_name, DIRECTORY_TYPE, this.currentNode));\n    }\n\n    touch(fileName) {\n        if (!this.existingFile(fileName)) {\n            this.currentNode.children.push(new Node(fileName, FILE_TYPE, this.currentNode));\n        }\n    }\n\n    pwd(start=this.currentNode) {\n        let entirePath = ''\n        let current = start;\n        while (current !== null) {\n            entirePath = current.name + '/' + entirePath;\n            current = current.parent;\n        }\n        return entirePath;\n    }\n\n    cd(path) {\n        path.split('/').forEach((pathEl) => {\n            if (pathEl === \"..\") {\n                if (this.currentNode.parent === null) {\n                    return;\n                }\n                this.currentNode = this.currentNode.parent;\n                return;\n            }\n\n            if (pathEl === \"~\") {\n                this.currentNode = this.root;\n                return;\n            }\n    \n            const node = this.currentNode.children.find(child => child.name === pathEl && child.type === DIRECTORY_TYPE);\n            if (node === undefined) {\n                return;\n            }\n            this.currentNode = node;\n        });\n        this.path = this.pwd();\n    }\n}\n\n","import './Terminal.css';\nimport { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\n\nconst HELP_MESSAGE = [\n  'Currently Working:',\n  ' - cd <path> - change directory',\n  ' - ls - list files',\n  ' - mkdir <dir> - create directory',\n  ' - touch <file> - create file',\n  ' - pwd - print working directory',\n  ' - help - show this message',\n  ' - open <file> - opens the contents of the file',\n  ' - man/less <file> - opens the contents of the in the terminal',\n  ' - about - Michael\\'s Amazing Emulated SHell'\n];\n\nconst HELP_STYLE = 'help-message';\nconst INFO_STYLE = 'info-message';\nconst ERROR_STYLE = 'error-message';\nconst DIRECTORY_STYLE = 'dir-message';\nconst FILE_STYLE = 'file-message';\n\nconst RAW_PATH = \"https://raw.githubusercontent.com/mxchen2001/mind-palace/\"\n\nexport default function Terminal(props) {\n  const today = new Date();\n  const time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n\n  const [dimensions, setDimensions] = useState({ width: window.innerWidth, height: window.innerHeight });\n  const [consoleOut, setConsoleOut] = useState([\n    {\n      type: 'default',\n      message: 'Current Login Time: ' + time,\n    }\n  ]);\n\n  const [previousText, setPreviousText] = useState([]);\n  const [previousTextPtr, setPreviousTextPtr] = useState(previousText.length);\n\n  const currentDirectory = props.dir;\n\n  const currentLine = useRef('');\n  const terminalBody = useRef('');\n\n  const [showHelp, setShowHelp] = useState(true);\n\n\n  useEffect(() => {\n    const handleResize = () => {\n      setDimensions({ width: window.innerWidth, height: window.innerHeight });\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  useEffect(() => {\n    const handleEnter = (event) => {\n      switch (event.key) {\n        case ('Tab'): {\n          const tokens = currentLine.current.value.split(' ');\n          const autocompleteToken = tokens.length > 0 ? tokens[tokens.length - 1].split('/') : '';\n          let currentNode = currentDirectory.getNode();\n          let currentPathEl = '';\n          autocompleteToken.forEach((pathEl, index) => {\n            if (currentNode && index == autocompleteToken.length - 1) {\n              if (pathEl.startsWith('.')) {\n                currentNode = currentNode.parent;\n                currentPathEl = '..'\n              } else {\n                currentNode = currentNode.children.find(child => child.name.startsWith(pathEl));\n                currentPathEl = currentNode ? currentNode.name : '';\n              }\n            } else if (currentNode) {\n              if (pathEl == '..') {\n                currentNode = currentNode.parent;\n              } else if (pathEl !== '.') {\n                currentNode = currentNode.children.find(child => child.name === pathEl && child.type === 0);\n              }\n            }\n          });\n  \n          if (currentNode) {\n            const previousTokens = autocompleteToken.slice(0, -1).join('/')\n            const completedToken = previousTokens + (previousTokens.length > 0 ? '/' : '') + currentPathEl + '/';\n            const completedString = tokens.length > 1 ? tokens.slice(0, -1).join(' ') + ' ' + completedToken : completedToken;\n            currentLine.current.value = completedString\n          }\n          break;\n        } case ('Enter'): {\n          setPreviousTextPtr(previousText.length + 1);\n          setPreviousText([...previousText, currentLine.current.value]);\n  \n          //////////////////////////////////////////////////////////////////////////////\n          // TODO: Functionize this, later\n  \n          let stdoutQueue = [...consoleOut,\n            {\n              className: 'default',\n              message: currentDirectory.getCurrentPath() + ' ' + currentLine.current.value + '\\n'\n            }\n          ];\n  \n          const command = currentLine.current.value.split(' ')[0].toLowerCase();\n          const args = currentLine.current.value.split(' ');\n  \n          switch (command) {\n            case ('ls'): {\n              const [childDir, childFiles] = currentDirectory.ls(args.length > 1 ? args[1] : '');\n              stdoutQueue.push({\n                className: DIRECTORY_STYLE,\n                message: childDir\n              });\n              stdoutQueue.push({\n                className: FILE_STYLE,\n                message: childFiles\n              });\n              break;\n            } case ('cd'): {\n              if (args.length > 1) {\n                currentDirectory.cd(args[1]);\n              }\n              break;\n            } case ('clear'): {\n              stdoutQueue = null;\n              setShowHelp(true);\n              break;\n            } case ('mkdir'): {\n              if (args.length > 1) {\n                currentDirectory.mkdir(args[1]);\n              }\n              break;\n            } case ('touch'): {\n              if (args.length > 1) {\n                currentDirectory.touch(args[1]);\n              }\n              break;\n            } case ('pwd'): {\n              stdoutQueue.push({\n                className: 'default',\n                message: currentDirectory.pwd()\n              });\n              break;\n            } case ('help'): {\n              stdoutQueue.push(...HELP_MESSAGE.map(message => {\n                return {\n                  className: HELP_STYLE,\n                  message: message + '\\n'\n                }\n              }));\n              break;\n            } case ('about'): {\n              stdoutQueue.push({\n                className: HELP_STYLE,\n                message: 'Michael\\'s Amazing Emulated SHell'\n              });\n  \n              break;\n            } case ('less'):\n              case ('man'): {\n              if (args.length > 1) {\n                const url = currentDirectory.getHref(RAW_PATH, args[1].replace('/', ''));\n                const options = {\n                  url: url,\n                  method: 'GET',\n                };\n                axios(options).then(res => {\n                  console.log(JSON.stringify(res.data));\n                  // retain whitespace\n                  const lines = res.data.split('\\n').map(line => {\n                    return {\n                      className: INFO_STYLE,\n                      message: '>' + line + ' \\n'\n                    }\n                  });\n  \n                  console.log(lines);\n                  setConsoleOut([...stdoutQueue, ...lines]);\n                  currentLine.current.value = '';\n                }).catch(err => {\n                  console.log(err);\n                  setConsoleOut([...stdoutQueue]);\n                  currentLine.current.value = '';\n                })\n              }\n              return;\n            } case ('open'): {\n              if (args.length > 1) {\n                const url = currentDirectory.getHref(RAW_PATH, args[1].replace('/', ''));\n                if (url) {\n                  window.open(url, \"_blank\")\n                }\n              }\n              break;\n            } case (''): {\n              if (showHelp) {\n                stdoutQueue.push({\n                  className: INFO_STYLE,\n                  message: 'type \"help\" for more information'\n                });\n                setShowHelp(false);\n              } else {\n                stdoutQueue.push({\n                  className: ERROR_STYLE,\n                  message: 'command not found'\n                });\n              }\n              break;\n            } }\n          //////////////////////////////////////////////////////////////////////////////\n  \n  \n  \n          setConsoleOut(stdoutQueue ? stdoutQueue : [{\n            type: 'default',\n            message: 'Most Recent Clear Time: ' + time,\n          }]);\n  \n          currentLine.current.value = '';\n          const clientHeight = terminalBody.current.clientHeight;\n          const scrollHeight = terminalBody.current.scrollHeight;\n  \n          if (clientHeight < scrollHeight) {\n            terminalBody.current.scrollTo(0, scrollHeight);\n          }\n          break;\n        } case ('ArrowUp'): {\n          if (previousTextPtr > 0) {\n            currentLine.current.value = previousText[previousTextPtr - 1];\n            setPreviousTextPtr(previousTextPtr - 1);\n          }\n          break;\n        } case ('ArrowDown'): {\n          if (previousTextPtr < previousText.length - 1) {\n            currentLine.current.value = previousText[previousTextPtr + 1];\n            setPreviousTextPtr(previousTextPtr + 1);\n          } else {\n            currentLine.current.value = '';\n            setPreviousTextPtr(previousText.length);\n          }\n          break;\n        } default: { \n          if (event.key !== 'ArrowLeft' && event.key !== 'ArrowRight') {\n            setPreviousTextPtr(previousText.length);\n          }\n          break;\n        }\n      }\n    };\n\n    currentLine.current.addEventListener(\"keydown\", handleEnter);\n    return () => currentLine.current.removeEventListener('keydown', handleEnter);\n  }, [previousText, consoleOut, previousTextPtr, showHelp]);\n\n  return (\n    <div className=\"window\">\n      <div className=\"topbar\">\n        <p className=\"circle\" style={{ backgroundColor: '#ef6251' }} />\n        <p className=\"circle\" style={{ backgroundColor: '#f6b73d' }} />\n        <p className=\"circle\" style={{ backgroundColor: '#51bc45' }} />\n        <p className=\"shellname\">MAESH {dimensions.width} x {dimensions.height}</p>\n      </div>\n      <div ref={terminalBody} onClick={() => document.getElementById(\"input-line\").focus()} className=\"textzone\">\n        <div className=\"previous-line\">\n          {consoleOut.map((item, index) => {\n            return (\n              <div className={item.className} key={index}>{item.message}</div>\n            )\n          })}\n        </div>\n        <div className=\"current-line\">\n          <div>{currentDirectory.getCurrentPath()}</div>\n          <input id=\"input-line\" ref={currentLine} className=\"current-input\" autoFocus autoComplete=\"off\"/>\n          <a tabIndex=\"0\" onFocus={() => document.getElementById(\"input-line\").focus()} />\n        </div>\n      </div>\n    </div>\n  );\n}","import { useState, useEffect, useRef } from 'react';\nimport Directory from './Directory'\nimport axios from 'axios'\n\nconst DUMMY = JSON.parse('{\"sha\":\"af36688591b2c42da1512fe2c82552b759c8cdb3\",\"url\":\"https://api.github.com/repos/mxchen2001/mind-palace/git/trees/af36688591b2c42da1512fe2c82552b759c8cdb3\",\"tree\":[{\"path\":\"Music\",\"mode\":\"040000\",\"type\":\"tree\",\"sha\":\"50fb3fd1e9bda0c0a0e21e440b88dee2eb7c706f\",\"url\":\"https://api.github.com/repos/mxchen2001/mind-palace/git/trees/50fb3fd1e9bda0c0a0e21e440b88dee2eb7c706f\"},{\"path\":\"Music/README.md\",\"mode\":\"100644\",\"type\":\"blob\",\"sha\":\"c211e81957de3f91cfa3e4060a168223398e71dc\",\"size\":44,\"url\":\"https://api.github.com/repos/mxchen2001/mind-palace/git/blobs/c211e81957de3f91cfa3e4060a168223398e71dc\"},{\"path\":\"README.md\",\"mode\":\"100644\",\"type\":\"blob\",\"sha\":\"7f4e58df5a2f25aed571aadaed8b5d0d03d5dede\",\"size\":47,\"url\":\"https://api.github.com/repos/mxchen2001/mind-palace/git/blobs/7f4e58df5a2f25aed571aadaed8b5d0d03d5dede\"},{\"path\":\"STEM\",\"mode\":\"040000\",\"type\":\"tree\",\"sha\":\"535748c23dd6b623fb78fb38180b300a7c662182\",\"url\":\"https://api.github.com/repos/mxchen2001/mind-palace/git/trees/535748c23dd6b623fb78fb38180b300a7c662182\"},{\"path\":\"STEM/Computing\",\"mode\":\"040000\",\"type\":\"tree\",\"sha\":\"b56ec94953488040b796f1baa1e05d86ea1b3982\",\"url\":\"https://api.github.com/repos/mxchen2001/mind-palace/git/trees/b56ec94953488040b796f1baa1e05d86ea1b3982\"},{\"path\":\"STEM/Computing/README.md\",\"mode\":\"100644\",\"type\":\"blob\",\"sha\":\"4943a841b2fb5f118f35f4468f01b289cf1950bf\",\"size\":44,\"url\":\"https://api.github.com/repos/mxchen2001/mind-palace/git/blobs/4943a841b2fb5f118f35f4468f01b289cf1950bf\"},{\"path\":\"STEM/README.md\",\"mode\":\"100644\",\"type\":\"blob\",\"sha\":\"31fdce5231d39d18da365c1abd70551f3fce2718\",\"size\":51,\"url\":\"https://api.github.com/repos/mxchen2001/mind-palace/git/blobs/31fdce5231d39d18da365c1abd70551f3fce2718\"}],\"truncated\":false}')\n\nconst RAW_PATH = \"https://raw.githubusercontent.com/mxchen2001/mind-palace/\"\n\nexport default function Test() {\n\n    const [dummyDir, setDummyDir] = useState(new Directory('master'))\n    const [href, setHref] = useState('')\n\n    return (\n        <div>\n            <button \n            style={{\n                width: '100%',\n                height: '50vh',\n            }}\n\n            onClick={() => {\n                console.log(\"Testing Github API\");\n                // make an api request to google.com\n\n                // const options = {\n                //     url: 'https://raw.githubusercontent.com/facebook/react/master/README.md',\n                //     method: 'GET',\n                //   };\n\n                // const options = {\n                //     url: 'https://api.github.com/repos/mxchen2001/mind-palace/git/trees/master?recursive=1',\n                //     method: 'GET',\n                //   };\n                // axios(options).then(res => {\n                //     console.log(JSON.stringify(res.data));\n                // }).catch(err => {\n                //     console.log(err);\n                // })\n\n                console.log(DUMMY);\n                console.log(DUMMY.tree);\n\n                const tree = DUMMY.tree;\n\n                tree.forEach(item => { \n                    dummyDir.cd('~')\n                    const path = item.path.split('/');             \n                    path.forEach((subPath, index) => {\n                        if (index === path.length - 1 && item.type === 'blob') {\n                            dummyDir.touch(subPath);\n                            return;\n                        }\n\n                        if (dummyDir.existingDirectory(subPath)) {\n                            dummyDir.cd(subPath);\n                        } else {\n                            console.log('creating new subdirectory');\n                            dummyDir.mkdir(subPath);\n                        }\n                    })\n                })\n\n                // console.log(dummyDir.getChildren());\n                setHref(dummyDir.getHref(RAW_PATH, 'README.md'));\n\n\n\n                console.log(dummyDir);\n\n\n            }}>TEST</button>\n            <a href={href} target=\"_blank\" rel=\"noopener noreferrer\">OPEN RAW </a>\n\n        </div>\n    )\n}","import axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport Directory from './Directory';\nimport Terminal from './Terminal';\nimport Test from './Test';\n\nfunction App() {\n\n  const [filesys, setFilesys] = useState(null);\n\n  useEffect(() => {\n    if (filesys != null) {\n      return;\n    }\n\n    const options = {\n      url: 'https://api.github.com/repos/mxchen2001/mind-palace/git/trees/master?recursive=1',\n      method: 'GET',\n    };\n    axios(options).then(res => {\n        console.log('Github API request Success');\n        const tree = res.data.tree;\n        const master = new Directory('master');\n        tree.forEach(item => { \n          master.cd('~')\n            const path = item.path.split('/');             \n            path.forEach((subPath, index) => {\n                if (index === path.length - 1 && item.type === 'blob' && !master.existingFile(subPath)) {\n                  master.touch(subPath);\n                } else {\n                  if (master.existingDirectory(subPath)) {\n                    master.cd(subPath);\n                  } else {\n                    master.mkdir(subPath);\n                  }\n                }\n            })\n        })\n    \n        master.cd('~');\n        setFilesys(master); \n    }).catch(err => {\n        console.log(err);\n    })\n\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {filesys ? <Terminal dir={filesys} /> : null}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}