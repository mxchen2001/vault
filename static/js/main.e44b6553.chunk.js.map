{"version":3,"sources":["Directory.js","Terminal.js","Test.js","App.js","index.js"],"names":["Node","name","type","parent","this","children","Directory","root_name","root","currentNode","path","node","map","child","filter","reduce","acc","curr","undefined","find","baseURL","fileName","existingFile","pwd","directory_name","push","entirePath","current","split","forEach","pathEl","HELP_MESSAGE","HELP_STYLE","INFO_STYLE","RAW_PATH","Terminal","props","today","Date","time","getHours","getMinutes","getSeconds","useState","width","window","innerWidth","height","innerHeight","dimensions","setDimensions","message","consoleOut","setConsoleOut","previousText","setPreviousText","length","previousTextPtr","setPreviousTextPtr","currentDirectory","dir","currentLine","useRef","terminalBody","showHelp","setShowHelp","useEffect","handleResize","addEventListener","removeEventListener","handleEnter","event","key","tokens","value","autocompleteToken","getNode","index","startsWith","previousTokens","slice","join","completedToken","completedString","stdoutQueue","className","getCurrentPath","command","toLowerCase","args","getDirectories","getFiles","cd","mkdir","touch","options","url","getHref","replace","method","axios","then","res","console","log","JSON","stringify","data","lines","line","catch","err","open","clientHeight","scrollHeight","scrollTo","style","backgroundColor","ref","onClick","document","getElementById","focus","item","id","autoFocus","tabIndex","onFocus","parse","App","filesys","setFilesys","tree","master","subPath","existingDirectory","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e44b6553.chunk.js","sourcesContent":["const DIRECTORY_TYPE = 0;\nconst FILE_TYPE = 1;\n\nclass Node {\n    constructor(name, type, parent) {\n        this.name = name;\n        this.type = type;\n        this.parent = parent;\n        this.children = [];\n    }\n}\n\n\nexport default class Directory {\n    constructor(root_name) {\n        this.root = new Node(root_name, DIRECTORY_TYPE, null);\n        this.currentNode = this.root;\n        this.path = this.root.name + '/';\n    }\n\n    setCurrent(node) {\n        this.currentNode = node;\n    }\n\n    getCurrentPath() {\n        return this.path;\n    }\n\n    getNode() {\n        return this.currentNode;\n    }\n\n    getChildren() {\n        return this.currentNode.children.map(child => child.name);\n    }\n\n    getFiles() {\n        return this.currentNode.children.filter(child => child.type === FILE_TYPE).map(child => child.name).reduce((acc, curr) => acc + ' ' + curr, '');\n    }\n\n    getDirectories() {\n        return this.currentNode.children.filter(child => child.type === DIRECTORY_TYPE).map(child => child.name).reduce((acc, curr) => acc + ' ' + curr, '');\n    }\n\n    existingDirectory(path) {\n        const node = this.currentNode.children.find(child => child.name === path && child.type === DIRECTORY_TYPE);\n        return node !== undefined;\n    }\n\n    existingFile(path) {\n        const node = this.currentNode.children.find(child => child.name === path && child.type === FILE_TYPE);\n        return node !== undefined;\n    }\n\n    getHref(baseURL, fileName) {\n        if (this.existingFile(fileName)) {\n            return baseURL + this.pwd() + '/' + fileName;\n        }\n        return null;\n    }\n\n    mkdir(directory_name) {\n        this.currentNode.children.push(new Node(directory_name, DIRECTORY_TYPE, this.currentNode));\n    }\n\n    touch(fileName) {\n        if (!this.existingFile(fileName)) {\n            this.currentNode.children.push(new Node(fileName, FILE_TYPE, this.currentNode));\n        }\n    }\n\n    pwd() {\n        let entirePath = ''\n        let current = this.currentNode;\n        while (current !== null) {\n            entirePath = current.name + '/' + entirePath;\n            current = current.parent;\n        }\n        return entirePath;\n    }\n\n    cd(path) {\n        path.split('/').forEach((pathEl) => {\n            if (pathEl === \"..\") {\n                if (this.currentNode.parent === null) {\n                    return;\n                }\n                this.currentNode = this.currentNode.parent;\n                return;\n            }\n\n            if (pathEl === \"~\") {\n                this.currentNode = this.root;\n                return;\n            }\n    \n            const node = this.currentNode.children.find(child => child.name === pathEl && child.type === DIRECTORY_TYPE);\n            if (node === undefined) {\n                return;\n            }\n            this.currentNode = node;\n        });\n        this.path = this.pwd();\n    }\n}\n\n","import './Terminal.css';\nimport { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\n\nconst HELP_MESSAGE = [\n  'Currently Working:',\n  ' - cd <path> - change directory',\n  ' - ls - list files',\n  ' - mkdir <dir> - create directory',\n  ' - touch <file> - create file',\n  ' - pwd - print working directory',\n  ' - help - show this message',\n  ' - open <file> - opens the contents of the file',\n  ' - man/less <file> - opens the contents of the in the terminal',\n  ' - about - Michael\\'s Amazing Emulated SHell'\n];\n\nconst HELP_STYLE = 'help-message';\nconst INFO_STYLE = 'info-message';\nconst ERROR_STYLE = 'error-message';\nconst DIRECTORY_STYLE = 'dir-message';\nconst FILE_STYLE = 'file-message';\n\nconst RAW_PATH = \"https://raw.githubusercontent.com/mxchen2001/mind-palace/\"\n\nexport default function Terminal(props) {\n    const today = new Date();\n    const time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n    \n    const [dimensions, setDimensions] = useState({width: window.innerWidth, height: window.innerHeight});\n    const [consoleOut, setConsoleOut] = useState([\n      {\n        type: 'default',\n        message: 'Current Login Time: ' + time,\n      }\n    ]);\n\n    const [previousText, setPreviousText] = useState([]);\n    const [previousTextPtr, setPreviousTextPtr] = useState(previousText.length);\n\n    const currentDirectory = props.dir;\n\n    const currentLine = useRef('');\n    const terminalBody = useRef('');\n\n    const [showHelp, setShowHelp] = useState(true);\n\n\n    useEffect(() => {\n      const handleResize = () => {\n        setDimensions({width: window.innerWidth, height: window.innerHeight});\n      };\n      window.addEventListener('resize', handleResize);\n      return () => window.removeEventListener('resize', handleResize);\n    }, []);\n\n    useEffect(() => {\n      const handleEnter = (event) => {\n        if (event.key === 'Tab') {\n          const tokens = currentLine.current.value.split(' ');\n          const autocompleteToken = tokens.length > 0 ? tokens[tokens.length - 1].split('/'): '';\n          let currentNode = currentDirectory.getNode();\n          autocompleteToken.forEach((pathEl, index) => {\n            if (currentNode && index == autocompleteToken.length - 1){\n              currentNode = currentNode.children.find(child => child.name.startsWith(pathEl));\n            } else if (currentNode) {\n              currentNode = currentNode.children.find(child => child.name === pathEl && child.type === 0);\n            }\n          });\n\n          if (currentNode && currentNode !== currentDirectory.getNode()) {\n            const previousTokens = autocompleteToken.slice(0, -1).join('/')\n            const completedToken = previousTokens + (previousTokens.length > 0 ? '/' : '') + currentNode.name + '/';\n            const completedString = tokens.length > 1 ? tokens.slice(0, -1).join(' ') + ' ' + completedToken : completedToken;\n            currentLine.current.value = completedString\n          }\n\n        } else if (event.key === 'Enter') {\n          setPreviousTextPtr(previousText.length + 1);\n          setPreviousText([...previousText, currentLine.current.value]);\n\n          //////////////////////////////////////////////////////////////////////////////\n          // TODO: Functionize this, later\n\n          let stdoutQueue = [...consoleOut, \n            {\n              className: 'default',\n              message: currentDirectory.getCurrentPath() + ' ' + currentLine.current.value + '\\n'\n            }\n          ];\n\n          const command = currentLine.current.value.split(' ')[0].toLowerCase();\n          const args = currentLine.current.value.split(' ');\n\n          if (command === 'ls') {\n            stdoutQueue.push({\n              className: DIRECTORY_STYLE,\n              message: currentDirectory.getDirectories()\n            });\n            stdoutQueue.push({\n              className: FILE_STYLE,\n              message: currentDirectory.getFiles()\n            });\n          } else if (command === 'cd') {\n            if (args.length > 1) {\n              currentDirectory.cd(args[1]);\n            }\n          } else if (command === 'clear') {\n            stdoutQueue = null;\n            setShowHelp(true);\n          } else if (command === 'mkdir') {\n            if (args.length > 1) {\n              currentDirectory.mkdir(args[1]);\n            }\n          } else if (command === 'touch') {\n            if (args.length > 1) {\n              currentDirectory.touch(args[1]);\n            }\n          } else if (command === 'pwd') {\n            stdoutQueue.push({\n              className: 'default',\n              message: currentDirectory.pwd()\n            });\n          } else if (command === 'help') {\n            stdoutQueue.push(...HELP_MESSAGE.map(message => {\n              return {\n                className: HELP_STYLE, \n                message: message + '\\n'\n              }\n            }));\n          } else if (command === 'about') {\n            stdoutQueue.push({\n              className: HELP_STYLE,\n              message: 'Michael\\'s Amazing Emulated SHell'\n            });\n\n          } else if (command === 'man' || command === 'less') {\n            if (args.length > 1) {\n              const url = currentDirectory.getHref(RAW_PATH, args[1].replace('/', ''));\n              const options = {\n                url: url,\n                method: 'GET',\n              };\n              axios(options).then(res => {\n                  console.log(JSON.stringify(res.data));\n                  // retain whitespace\n                  const lines = res.data.split('\\n').map(line => {\n                    return {\n                      className: INFO_STYLE,\n                      message: '>' + line + ' \\n'\n                    }\n                  });\n\n                  console.log(lines);\n                  setConsoleOut([...stdoutQueue, ...lines]);\n                  currentLine.current.value = '';\n                }).catch(err => {\n                  console.log(err);\n                  setConsoleOut([...stdoutQueue]);\n                  currentLine.current.value = '';\n              })\n            }\n            return;\n          } else if (command === 'open') {\n            if (args.length > 1) {\n              const url = currentDirectory.getHref(RAW_PATH, args[1].replace('/', ''));\n              if (url) {\n                window.open(url, \"_blank\")\n              }\n            }\n          } else if (command === '' && showHelp) {\n            stdoutQueue.push({\n              className: INFO_STYLE,\n              message: 'type \"help\" for more information'\n            });\n            setShowHelp(false);\n          } else if (command !== ''){\n            stdoutQueue.push({\n              className: ERROR_STYLE,\n              message: 'command not found'\n            });\n          }\n          //////////////////////////////////////////////////////////////////////////////\n\n\n\n          setConsoleOut(stdoutQueue ? stdoutQueue : []);\n          \n          currentLine.current.value = '';\n          const clientHeight = terminalBody.current.clientHeight;\n          const scrollHeight = terminalBody.current.scrollHeight;\n\n          if (clientHeight < scrollHeight) {\n            terminalBody.current.scrollTo(0, scrollHeight);\n          }\n        } else if (event.key === 'ArrowUp') {\n          if (previousTextPtr > 0) {\n            currentLine.current.value = previousText[previousTextPtr - 1];\n            setPreviousTextPtr(previousTextPtr - 1);\n          }\n        } else if (event.key === 'ArrowDown') {\n          if (previousTextPtr < previousText.length - 1) {\n            currentLine.current.value = previousText[previousTextPtr + 1];\n            setPreviousTextPtr(previousTextPtr + 1);\n          } else {\n            currentLine.current.value = '';\n            setPreviousTextPtr(previousText.length);\n          }\n        } else if (event.key !== 'ArrowLeft' && event.key !== 'ArrowRight') {\n            setPreviousTextPtr(previousText.length);\n        }\n      };\n\n      currentLine.current.addEventListener(\"keydown\", handleEnter);\n      return () => currentLine.current.removeEventListener('keydown', handleEnter);\n    }, [previousText, consoleOut, previousTextPtr, showHelp]);\n\n    return (\n      <div className=\"window\">\n        <div className=\"topbar\">\n          <p className=\"shellname\">\n            MAESH {dimensions.width} x {dimensions.height}\n          </p>\n          <p className=\"circle\" style={{backgroundColor:'#ef6251'}}/>\n          <p className=\"circle\" style={{backgroundColor:'#f6b73d'}}/>\n          <p className=\"circle\" style={{backgroundColor:'#51bc45'}}/>\n        </div>\n        <div ref={terminalBody} onClick={() => document.getElementById(\"input-line\").focus()} className=\"textzone\">\n          <div className=\"previous-line\">\n            {consoleOut.map((item, index) => {\n              return (\n                <div className={item.className} key={index}>{item.message}</div>\n              )\n            })}  \n          </div>\n          <div className=\"current-line\">\n            <div>{currentDirectory.getCurrentPath()}</div>\n            <input id=\"input-line\" ref={currentLine} className=\"current-input\" autoFocus/>\n            <a tabIndex=\"0\" onFocus={() => document.getElementById(\"input-line\").focus()} />\n          </div>\n        </div>\n      </div>\n    );\n}","import { useState, useEffect, useRef } from 'react';\nimport Directory from './Directory'\nimport axios from 'axios'\n\nconst DUMMY = JSON.parse('{\"sha\":\"af36688591b2c42da1512fe2c82552b759c8cdb3\",\"url\":\"https://api.github.com/repos/mxchen2001/mind-palace/git/trees/af36688591b2c42da1512fe2c82552b759c8cdb3\",\"tree\":[{\"path\":\"Music\",\"mode\":\"040000\",\"type\":\"tree\",\"sha\":\"50fb3fd1e9bda0c0a0e21e440b88dee2eb7c706f\",\"url\":\"https://api.github.com/repos/mxchen2001/mind-palace/git/trees/50fb3fd1e9bda0c0a0e21e440b88dee2eb7c706f\"},{\"path\":\"Music/README.md\",\"mode\":\"100644\",\"type\":\"blob\",\"sha\":\"c211e81957de3f91cfa3e4060a168223398e71dc\",\"size\":44,\"url\":\"https://api.github.com/repos/mxchen2001/mind-palace/git/blobs/c211e81957de3f91cfa3e4060a168223398e71dc\"},{\"path\":\"README.md\",\"mode\":\"100644\",\"type\":\"blob\",\"sha\":\"7f4e58df5a2f25aed571aadaed8b5d0d03d5dede\",\"size\":47,\"url\":\"https://api.github.com/repos/mxchen2001/mind-palace/git/blobs/7f4e58df5a2f25aed571aadaed8b5d0d03d5dede\"},{\"path\":\"STEM\",\"mode\":\"040000\",\"type\":\"tree\",\"sha\":\"535748c23dd6b623fb78fb38180b300a7c662182\",\"url\":\"https://api.github.com/repos/mxchen2001/mind-palace/git/trees/535748c23dd6b623fb78fb38180b300a7c662182\"},{\"path\":\"STEM/Computing\",\"mode\":\"040000\",\"type\":\"tree\",\"sha\":\"b56ec94953488040b796f1baa1e05d86ea1b3982\",\"url\":\"https://api.github.com/repos/mxchen2001/mind-palace/git/trees/b56ec94953488040b796f1baa1e05d86ea1b3982\"},{\"path\":\"STEM/Computing/README.md\",\"mode\":\"100644\",\"type\":\"blob\",\"sha\":\"4943a841b2fb5f118f35f4468f01b289cf1950bf\",\"size\":44,\"url\":\"https://api.github.com/repos/mxchen2001/mind-palace/git/blobs/4943a841b2fb5f118f35f4468f01b289cf1950bf\"},{\"path\":\"STEM/README.md\",\"mode\":\"100644\",\"type\":\"blob\",\"sha\":\"31fdce5231d39d18da365c1abd70551f3fce2718\",\"size\":51,\"url\":\"https://api.github.com/repos/mxchen2001/mind-palace/git/blobs/31fdce5231d39d18da365c1abd70551f3fce2718\"}],\"truncated\":false}')\n\nconst RAW_PATH = \"https://raw.githubusercontent.com/mxchen2001/mind-palace/\"\n\nexport default function Test() {\n\n    const [dummyDir, setDummyDir] = useState(new Directory('master'))\n    const [href, setHref] = useState('')\n\n    return (\n        <div>\n            <button \n            style={{\n                width: '100%',\n                height: '50vh',\n            }}\n\n            onClick={() => {\n                console.log(\"Testing Github API\");\n                // make an api request to google.com\n\n                // const options = {\n                //     url: 'https://raw.githubusercontent.com/facebook/react/master/README.md',\n                //     method: 'GET',\n                //   };\n\n                // const options = {\n                //     url: 'https://api.github.com/repos/mxchen2001/mind-palace/git/trees/master?recursive=1',\n                //     method: 'GET',\n                //   };\n                // axios(options).then(res => {\n                //     console.log(JSON.stringify(res.data));\n                // }).catch(err => {\n                //     console.log(err);\n                // })\n\n                console.log(DUMMY);\n                console.log(DUMMY.tree);\n\n                const tree = DUMMY.tree;\n\n                tree.forEach(item => { \n                    dummyDir.cd('~')\n                    const path = item.path.split('/');             \n                    path.forEach((subPath, index) => {\n                        if (index === path.length - 1 && item.type === 'blob') {\n                            dummyDir.touch(subPath);\n                            return;\n                        }\n\n                        if (dummyDir.existingDirectory(subPath)) {\n                            dummyDir.cd(subPath);\n                        } else {\n                            console.log('creating new subdirectory');\n                            dummyDir.mkdir(subPath);\n                        }\n                    })\n                })\n\n                // console.log(dummyDir.getChildren());\n                setHref(dummyDir.getHref(RAW_PATH, 'README.md'));\n\n\n\n                console.log(dummyDir);\n\n\n            }}>TEST</button>\n            <a href={href} target=\"_blank\" rel=\"noopener noreferrer\">OPEN RAW </a>\n\n        </div>\n    )\n}","import axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport Directory from './Directory';\nimport Terminal from './Terminal';\nimport Test from './Test';\n\nfunction App() {\n\n  const [filesys, setFilesys] = useState(null);\n\n  useEffect(() => {\n    if (filesys != null) {\n      return;\n    }\n\n    const options = {\n      url: 'https://api.github.com/repos/mxchen2001/mind-palace/git/trees/master?recursive=1',\n      method: 'GET',\n    };\n    axios(options).then(res => {\n        console.log('Github API request Success');\n        const tree = res.data.tree;\n        const master = new Directory('master');\n        tree.forEach(item => { \n          master.cd('~')\n            const path = item.path.split('/');             \n            path.forEach((subPath, index) => {\n                if (index === path.length - 1 && item.type === 'blob' && !master.existingFile(subPath)) {\n                  master.touch(subPath);\n                } else {\n                  if (master.existingDirectory(subPath)) {\n                    master.cd(subPath);\n                  } else {\n                    master.mkdir(subPath);\n                  }\n                }\n            })\n        })\n    \n        master.cd('~');\n        setFilesys(master); \n    }).catch(err => {\n        console.log(err);\n    })\n\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {filesys ? <Terminal dir={filesys} /> : null}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}